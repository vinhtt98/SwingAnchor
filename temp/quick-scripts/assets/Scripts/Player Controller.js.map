{"version":3,"sources":["Player Controller.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Scripts","sourcesContent":["import TouchSensorController from \"./TouchSensorController\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PlayerController extends cc.Component {\n    @property({\n        visible:true,\n        type:cc.Node\n    })\n    private _anchor:cc.Node = null;\n\n    @property({\n        visible:true,\n        type:TouchSensorController\n    })\n    private _touchSensor:TouchSensorController = null;\n\n    private _isSwing = false;\n    private _distanceJoint:cc.DistanceJoint;\n\n    onLoad(){\n        if(this._touchSensor == null){\n            this._touchSensor = cc.find(\"Canvas/Main Camera/Touch Sensor\").getComponent(TouchSensorController);\n        }\n        this._distanceJoint = this.node.getComponent(cc.DistanceJoint);\n    }\n\n    update(dt){\n        if(this._touchSensor.getIsTouching()){\n            this.onSwing(this._anchor);\n            cc.log(\"SWING\");\n        }\n        else{\n            this.onRelease();\n            cc.log(\"RELEASE\");\n        }\n        cc.log(this.node.getComponent(cc.DistanceJoint));\n    }\n\n    private lookAtObject(target){\n        let direction = target.position.addSelf(this.node.position.mulSelf(-1));\n        let angle = Math.atan2(direction.x, direction.y) * 180 / Math.PI; \n        this.node.rotation = angle;\n    }\n\n    private onSwing(anchor:cc.Node){\n        this.lookAtObject(anchor);\n        if(this._isSwing)\n            return;\n        this._isSwing = true;\n        this._distanceJoint.enabled = true;\n        this._distanceJoint.connectedBody = anchor.getComponent(cc.RigidBody);\n\n        let currentPos = this.node.parent.convertToWorldSpaceAR(this.node.position);\n        let anchorPos = anchor.parent.convertToWorldSpaceAR(anchor.position);\n\n        this._distanceJoint.distance = currentPos.addSelf(anchorPos.mulSelf(-1)).mag();\n        this._distanceJoint.apply();\n    }\n\n    private onRelease(){\n        if(!this._isSwing)\n            return;\n        this._isSwing = false;\n\n        this._distanceJoint.enabled = false;\n        \n        this._distanceJoint.connectedBody = null;\n        this._distanceJoint.apply();\n    }\n}\n"]}